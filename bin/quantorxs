#!/usr/bin/env python
"""Command line quantorxs interface

"""
import os
import argparse
from shutil import copy2

import pkg_resources

from quantorxs.main import process_spectra


parser = argparse.ArgumentParser(
    description='Quantify all the Carbon XANES spectra in a directory')
parser.add_argument(
    '--directory', default=os.getcwd(),
    help="Directory containing the XANES spectra in XXX format. "
    "The default is the current directory."
    "The extension of the files must be `.txt`")
parser.add_argument(
    '--results_directory',
    default="QUANTORXS results",
    help='Directory where to store the results relative to the '
    'spectra directory. If the directory exists, an incremental index is '
    'is appended. The default is "QUANTORXS results"')
parser.add_argument(
    '--fig_format', default="svg",
    help="The format of the figures. The default is svg.")
parser.add_argument(
    "--demo",
    help='Create a "QUANTORXS demo" folder in the directory'
    'specified by --directory containing example spectra '
    'and process them with QUANTORXS',
    action="store_true")


args = parser.parse_args()

if args.demo:
    demo_path = os.path.join(args.directory, "QUANTORXS demo")
    print("Creating the demo directory in %s" % demo_path)
    if os.path.exists(demo_path):
        raise ValueError(
            "The demo directory already exists in the directory: %s" %
            args.directory)
    os.makedirs(demo_path)
    files = [
        "nebulotron.txt",
        "PEEK.txt",
        "PES_S2.txt",
        "PLA-CO_S2.txt",
    ]
    for f in files:
        filepath = pkg_resources.resource_filename(
            "quantorxs", os.path.join("data", "example_spectra", f))
        copy2(filepath, demo_path)
    args.directory = demo_path

savepath = os.path.join(args.directory, args.results_directory)
process_spectra(spectra_folder_path=args.directory,
                savepath=savepath,
                fig_format=args.fig_format)
